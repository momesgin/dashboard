name: Test Extension workflows

on:
  schedule:
    - cron: "0 0 * * *"

defaults:
  run:
    shell: bash
    working-directory: ./

jobs:
  retrieve-tags-release-2-dot-8:
    runs-on: ubuntu-latest
    outputs:
      SHELL_TAG: ${{ steps.retrieve-data.outputs.SHELL_TAG }}
      CREATORS_TAG: ${{ steps.retrieve-data.outputs.CREATORS_TAG }}
      ECI_TAG: ${{ steps.retrieve-data.outputs.ECI_TAG }}
      EXTENSIONS_TAG: ${{ steps.retrieve-data.outputs.EXTENSIONS_TAG }}
      CURR_JOB_ID: ${{ github.job }}
      tags-job-status: ${{ job.status }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: release-2.8

      - name: Retrieve Shell and Creators versions
        run: source ./shell/scripts/retrieve-versions.sh
        id: retrieve-data
        shell: bash
  test-build-extension-charts-release-2-dot-8:
    needs: retrieve-tags-release-2-dot-8
    uses: rancher/dashboard/.github/workflows/build-extension-charts.yml@release-2.8
    permissions:
      actions: write
      contents: write
      deployments: write
      pages: write
    with:
      target_branch: 'gh-pages'
      tagged_release:  ${{ needs.retrieve-tags-release-2-dot-8.outputs.EXTENSIONS_TAG }}
      is_test:  'true'
      test_ext_repo: 'ui-plugin-examples'
      test_ext_branch:  'main'
  test-build-extension-catalog-release-2-dot-8:
    needs: retrieve-tags-release-2-dot-8
    uses: rancher/dashboard/.github/workflows/build-extension-catalog.yml@release-2.8
    permissions:
      actions: write
      contents: read
      packages: write
    with:
      registry_target: ghcr.io
      registry_user: ${{ github.actor }}
      tagged_release: ${{ needs.retrieve-tags-release-2-dot-8.outputs.ECI_TAG }}
      is_test:  'true'
      test_ext_repo: 'ui-plugin-examples'
      test_ext_branch:  'main'
    secrets: 
      registry_token: ${{ secrets.GITHUB_TOKEN }}
  test-release-shell-pkg-release-2-dot-8:
    needs: retrieve-tags-release-2-dot-8
    uses: rancher/dashboard/.github/workflows/release-shell-pkg.yaml@release-2.8
    with:
      is_test:  'true'
      test_branch:  'release-2.8'
      tag: ${{ needs.retrieve-tags-release-2-dot-8.outputs.SHELL_TAG }}
  test-release-creators-pkg-release-2-dot-8:
    needs: retrieve-tags-release-2-dot-8
    uses: rancher/dashboard/.github/workflows/release-shell-pkg.yaml@release-2.8
    with:
      is_test: 'true'
      test_branch: 'release-2.8'
      tag: ${{ needs.retrieve-tags-release-2-dot-8.outputs.CREATORS_TAG }}

  slack-message:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: [retrieve-tags-release-2-dot-8, test-build-extension-charts-release-2-dot-8, test-build-extension-catalog-release-2-dot-8, test-release-shell-pkg-release-2-dot-8, test-release-creators-pkg-release-2-dot-8]
    steps: 
      - name: Slack message for workflow
        if: always()
        shell: bash
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL_EXT_WFS }}
        run: |
          OUTPUT_ARRAY=("${{ needs.retrieve-tags-release-2-dot-8.outputs.tags-job-status }}" "${{ needs.test-build-extension-charts-release-2-dot-8.outputs.build-job-status }}" "${{ needs.test-build-extension-catalog-release-2-dot-8.outputs.build-extension-catalog-job-status }}" "${{ needs.test-release-shell-pkg-release-2-dot-8.outputs.build-release-shell-creators-status }}" "${{ needs.test-release-creators-pkg-release-2-dot-8.outputs.build-release-shell-creators-status }}")

          if [[ ${OUTPUT_ARRAY[@]} =~ "failure" ]]; then
            MSG_PREFIX="Workflows testing for extensions failed! ðŸ†˜"
          else
            MSG_PREFIX="Workflows testing for extensions succedded! âœ…"
          fi

          echo "message prefix ::: $MSG_PREFIX"

          TAGS_OUTPUT_STRING="status for retrieve-tags-release-2-dot-8 - build => ${{ needs.retrieve-tags-release-2-dot-8.outputs.tags-job-status }}"
          EXT_CHART_BUILD_OUTPUT_STRING="status for test-build-extension-charts-release-2-dot-8 - build => ${{ needs.test-build-extension-charts-release-2-dot-8.outputs.build-job-status }}"    
          EXT_CATALOG_BUILD_OUTPUT_STRING="status for test-build-extension-catalog-release-2-dot-8 - build => ${{ needs.test-build-extension-catalog-release-2-dot-8.outputs.build-extension-catalog-job-status }}"    
          RELEASE_SHELL_PKG_OUTPUT_STRING="status for test-release-shell-pkg-release-2-dot-8 - release => ${{ needs.test-release-shell-pkg-release-2-dot-8.outputs.build-release-shell-creators-status }}"    
          RELEASE_CREATORS_PKG_OUTPUT_STRING="status for test-release-creators-pkg-release-2-dot-8 - release => ${{ needs.test-release-creators-pkg-release-2-dot-8.outputs.build-release-shell-creators-status }}"    

          echo $TAGS_OUTPUT_STRING    
          echo $EXT_CHART_BUILD_OUTPUT_STRING    
          echo $EXT_CATALOG_BUILD_OUTPUT_STRING
          echo $RELEASE_SHELL_PKG_OUTPUT_STRING    
          echo $RELEASE_CREATORS_PKG_OUTPUT_STRING    
        
          MSG="$MSG_PREFIX ::: $TAGS_OUTPUT_STRING ::: $EXT_CHART_BUILD_OUTPUT_STRING ::: $EXT_CATALOG_BUILD_OUTPUT_STRING ::: $RELEASE_SHELL_PKG_OUTPUT_STRING ::: $RELEASE_CREATORS_PKG_OUTPUT_STRING"

          echo "message sent: $MSG"

          curl -X POST -H 'Content-type: application/json; charset=utf-8' \
          --data '{ branch: "release-2.8", message: $MSG }' $SLACK_WEBHOOK